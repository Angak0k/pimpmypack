name: release

on:
  push:
    # run only against tags
    tags:
      - "*"

permissions:
  contents: write

jobs:
  Releaser:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: pmp_user
          POSTGRES_PASSWORD: pmp1234
          POSTGRES_DB: pmp_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GHPUSH_PAT }}
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Check Go modules
        run: |
          if [[ ! -z $(go mod tidy && git diff --exit-code) ]]; then
            echo "Please run "go mod tidy" to sync Go modules"
            exit 1
          fi

      - name: Test
        env:
          DB_HOST: localhost                       
          DB_USER: pmp_user
          DB_PASSWORD: pmp1234
          DB_NAME: pmp_db
          DB_PORT: 5432 
          API_SECRET: myawsomeapisecret
          TOKEN_HOUR_LIFESPAN: 1
          MAIL_IDENTITY: "test@exemple.com"
          MAIL_USERNAME: "test_user"
          MAIL_PASSWORD: "test_password"
          MAIL_SERVER: "smtp.exemple.com"
        run: make test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}